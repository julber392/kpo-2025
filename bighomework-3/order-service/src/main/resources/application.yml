spring:
  application:
    name: order-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:orders}
    username: ${POSTGRES_USER:user}
    password: ${POSTGRES_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    template:
      exchange: orders.exchange
    listener:
      simple:
        acknowledge-mode: auto

server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    com.example.orderservice: DEBUG

rabbitmq:
  exchange:
    name: orders.exchange
  queue:
    order:
      name: order.queue
    payment.status:
      name: payment.status.queue
  routing:
    key:
      order: order.routing.key
      payment.status: payment.status.routing.key